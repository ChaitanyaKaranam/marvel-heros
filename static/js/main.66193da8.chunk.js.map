{"version":3,"sources":["actions/index.js","App.js","serviceWorker.js","heros.js","reducers/index.js","reducers/reducer_shuffledMovies.js","reducers/reducer_selectedMovie.js","reducers/reducer_lifes.js","index.js"],"names":["SHUFFLE_MOVIES","ORDERED_MOVIES","SELECTED_MOVIES","REMOVE_SHUFFLED_MOVIE","REMOVE_SELECTED_MOVIE","ADD_MOVIE","LIFES","RESET_SELECTION","shuffleMovies","type","selectedMovies","payload","removeShuffledMovie","removeSelectedMovie","addMovie","checkLifes","resetSelection","App","this","props","prevProps","prevState","console","log","Lifes","toast","getInfinityStones","lifes","stones","0","1","2","3","4","5","react_default","a","createElement","className","Array","from","length","v","i","title","key","concat","_this","arr","ShuffledMovies","map","movie","src","img","alt","height","onClick","index","SelectedMovies","_this2","renderShuffled","renderSelectedMovies","react_toastify","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","Component","connect","_ref","actions","Boolean","window","location","hostname","match","movies","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","combineReducers","state","arguments","undefined","action","Object","keys","heros","j","Math","floor","random","val","newState_shuffled","toConsumableArray","splice","indexOf","newState_selected","values","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","es","store","reducers","__REDUX_DEVTOOLS_EXTENSION__","trace","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66193da8.chunk.js","sourcesContent":["export const SHUFFLE_MOVIES = 'SHUFFLE_MOVIES';\r\nexport const ORDERED_MOVIES = 'ORDERED_MOVIES';\r\nexport const SELECTED_MOVIES = 'SELECTED_MOVIES';\r\nexport const REMOVE_SHUFFLED_MOVIE = 'REMOVE_SHUFFLED_MOVIE';\r\nexport const REMOVE_SELECTED_MOVIE = 'REMOVE_SELECTED_MOVIE';\r\nexport const ADD_MOVIE = 'ADD_MOVIE';\r\nexport const LIFES = 'LIFES';\r\nexport const RESET_SELECTION = 'RESET_SELECTION';\r\n\r\nexport const shuffleMovies = () => {\r\n    return {\r\n        type: SHUFFLE_MOVIES\r\n    }\r\n}\r\n\r\nexport const selectedMovies = (payload) => {\r\n    return {\r\n        type: SELECTED_MOVIES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const removeShuffledMovie = (payload) => {\r\n    return{\r\n        type: REMOVE_SHUFFLED_MOVIE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const removeSelectedMovie = (payload) => {\r\n    return{\r\n        type: REMOVE_SELECTED_MOVIE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const addMovie = (payload) => {\r\n    return{\r\n        type: ADD_MOVIE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const checkLifes = (payload) => {\r\n    return{\r\n        type: LIFES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const resetSelection = () => {\r\n    return{\r\n        type: RESET_SELECTION\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport * as actions from './actions';\nimport { connect } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n\n  componentDidMount(){     \n    this.props.shuffleMovies();\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    console.log(this.props.Lifes);\n    if(this.props.Lifes !== prevProps.Lifes && (this.props.Lifes !== 0)){\n      toast(this.getInfinityStones(this.props.Lifes));\n    }\n  }\n\n  getInfinityStones(lifes){\n    let stones = {\n      0: \"space\",\n      1: \"mind\",\n      2: \"reality\",\n      3: \"power\",\n      4: \"time\",\n      5: \"soul\"\n    }\n  \n    return (\n      <div className=\"infinity\">\n        {\n          Array.from({length: lifes}, (v,i) => <span title={stones[i]} key={stones[i]} className={`stones ${stones[i]}`}><i className=\"fas fa-gem\"></i></span> )\n        }\n      </div>\n    )\n  \n  }\n\n  renderShuffled(){\n\n    let arr = this.props.ShuffledMovies;\n\n    if(arr.length < 1){\n      return(\n        <h6 className=\"center white-text\">No Movies in this list</h6>\n      )\n    }\n\n    return arr.map(movie => {\n      return(       \n          <div className=\"col l4 m4 s12\" key={movie.title}>\n            <img src={movie.img} alt={movie.title} height={300} onClick={() => {\n              this.props.selectedMovies(movie);\n              this.props.removeShuffledMovie(movie);\n              this.props.checkLifes({ index: this.props.SelectedMovies.length, movie});\n            }}/>\n          </div>        \n      )\n    })\n  }\n\n  renderSelectedMovies(){\n\n    if(this.props.Lifes === 0){\n      this.props.shuffleMovies();\n      this.props.resetSelection();\n    }\n\n    if(this.props.SelectedMovies){\n      \n      let arr = this.props.SelectedMovies;\n\n      if(arr.length < 1){\n        return(\n          <h6 className=\"center white-text\">No Movies in this list</h6>\n        )\n      }\n\n      return arr.map(movie => {\n        return(       \n            <div className=\"col l4 m4 s12\" key={movie.title}>\n              <img alt={movie.title} src={movie.img} height={300} onClick={() => {\n                this.props.removeSelectedMovie(movie);\n                this.props.addMovie(movie);\n              }}/>\n            </div>        \n        )\n      })\n    }\n  }\n\n  render() {\n    if(this.props.ShuffledMovies){\n      return (\n        <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"shuffle col s12 m12 l6 container\">\n          <div className=\"row\">\n            <h3 className=\"center white-text\">Shuffled Movies</h3>\n            <br/>\n            <br/>\n            {this.renderShuffled()}\n            </div>\n          </div>\n          <div className=\"ordered col s12 m12 l6 container\">\n            <div className=\"row\">\n            <h3 className=\"center white-text\">Selected Movies</h3>\n            <br/>\n            <br/>\n            {this.renderSelectedMovies()}\n            </div>\n          </div>\n        </div>\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </div>\n      );\n    }else{\n      return(\n        <div>Loading...</div>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps({ ShuffledMovies, SelectedMovies, Lifes }){\n  return{\n    ShuffledMovies, SelectedMovies, Lifes\n  }\n}\n\nexport default connect(mapStateToProps,actions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let movies = {\r\n    0: {\r\n        title: 'Iron Man',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/2/20/Ironmanposter.jpg/revision/latest/scale-to-width-down/338?cb=20080502172105'\r\n    },\r\n    1: {\r\n        title: 'The Incredible Hulk',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/7/78/The_Incredible_Hulk_%28film%29.jpg/revision/latest/scale-to-width-down/338?cb=20080529212502'\r\n    },\r\n    2: {\r\n        title: 'Iron Man 2',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/e/ed/Iron_Man_2_poster.jpg/revision/latest/scale-to-width-down/339?cb=20190309193419'\r\n    },\r\n    3: {\r\n        title: 'Thor',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/9/9c/Thor_Theatrical_Poster.jpg/revision/latest/scale-to-width-down/338?cb=20120605120807'\r\n    },\r\n    4: {\r\n        title: 'Captain America: The First Avenger',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/3/37/Captain_America_The_First_Avenger_poster.jpg/revision/latest?cb=20110725134313'\r\n    },\r\n    5: {\r\n        title: 'The Avengers',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/1/1a/The_Avengers_%28film%29_poster_011.jpg/revision/latest/scale-to-width-down/338?cb=20120229020811'\r\n    },\r\n    6: {\r\n        title: 'Iron Man 3',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/e/e9/Iron_Man_3_%28film%29_poster_006.jpg/revision/latest/scale-to-width-down/337?cb=20130228172348'\r\n    },\r\n    7: {\r\n        title: 'Thor: The Dark World',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/e/e5/Thor_The_Dark_World_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20130801204202'\r\n    },\r\n    8: {\r\n        title: 'Captain America: The Winter Soldier',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/0/03/Captain_America_The_Winter_Soldier_poster_005.jpg/revision/latest/scale-to-width-down/337?cb=20140131142746'\r\n    },\r\n    9: {\r\n        title: 'Guardians of the Galaxy',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/b/b9/Guardians_of_the_Galaxy_%28film%29_poster_001.jpg/revision/latest/scale-to-width-down/337?cb=20140516161438'\r\n    },\r\n    10: {\r\n        title: 'Avengers: Age of Ultron',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/e/ee/Avengers_Age_of_Ultron_poster_001.jpg/revision/latest/scale-to-width-down/337?cb=20150224171724'\r\n    },\r\n    11: {\r\n        title: 'Ant-Man',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/d/d6/Ant-Man_%28film%29_poster_001.jpeg/revision/latest/scale-to-width-down/337?cb=20150506151531'\r\n    },\r\n    12: {\r\n        title: 'Captain America: Civil War',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/5/5c/Civil_War_Final_Poster.jpg/revision/latest/scale-to-width-down/337?cb=20160310174551'\r\n    },\r\n    13: {\r\n        title: 'Doctor Strange',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/2/23/Doctor_Strange_%28film%29_poster_003.jpg/revision/latest/scale-to-width-down/337?cb=20160724013508'\r\n    },\r\n    14: {\r\n        title: 'Guardians of the Galaxy Vol. 2',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/9/94/Guardians_of_the_Galaxy_Vol._2_%28film%29_poster_004.jpg/revision/latest/scale-to-width-down/337?cb=20170301052056'\r\n    },\r\n    15: {\r\n        title: 'Spider-Man: Homecoming',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/4/4f/Spider-Man_Homecoming_poster_004.jpg/revision/latest/scale-to-width-down/337?cb=20170524085936'\r\n    },\r\n    16: {\r\n        title: 'Thor: Ragnarok',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/3/30/Thor_Ragnarok_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20170723014825'\r\n    },\r\n    17: {\r\n        title: 'Black Panther',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/9/94/Black_Panther_%28film%29_poster_003.jpg/revision/latest/scale-to-width-down/337?cb=20171016144930'\r\n    },\r\n    18: {\r\n        title: 'Avengers: Infinity War',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/8/8b/Avengers_Infinity_War_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20180318160428'\r\n    },\r\n    19: {\r\n        title: 'Ant-Man and the Wasp',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/3/38/Ant-Man_and_the_Wasp_%28film%29_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20180430180151'\r\n    },\r\n    20: {\r\n        title: 'Captain Marvel',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/3/33/Captain_Marvel_%28film%29_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20181203081354'\r\n    }\r\n}\r\n\r\nexport default movies;","import { combineReducers } from 'redux';\r\nimport ShuffledMovies from './reducer_shuffledMovies';\r\nimport SelectedMovies from './reducer_selectedMovie';\r\nimport Lifes from './reducer_lifes';\r\n\r\nexport default combineReducers({\r\n    ShuffledMovies,\r\n    SelectedMovies,\r\n    Lifes\r\n})","import { SHUFFLE_MOVIES, REMOVE_SHUFFLED_MOVIE, ADD_MOVIE } from '../actions';\r\nimport heros from '../heros';\r\n\r\nexport default function(state = null, action){\r\n    switch(action.type){\r\n\r\n        case SHUFFLE_MOVIES:\r\n            let arr = Object.keys(heros);\r\n            for (let i = arr.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [arr[i], arr[j]] = [arr[j], arr[i]];\r\n            }\r\n            return arr.map(val => {\r\n                return heros[val]\r\n            });\r\n\r\n        case REMOVE_SHUFFLED_MOVIE:\r\n            let newState_shuffled = [...state];\r\n            newState_shuffled.splice(newState_shuffled.indexOf(action.payload), 1);\r\n            return newState_shuffled;\r\n\r\n        case ADD_MOVIE:\r\n            let newState_add = [...state, action.payload];\r\n            return newState_add;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { SELECTED_MOVIES, REMOVE_SELECTED_MOVIE, RESET_SELECTION } from '../actions';\r\n\r\nexport default function(state = [], action){\r\n    switch(action.type){\r\n\r\n        case SELECTED_MOVIES:\r\n            let newState = [...state, action.payload]\r\n            return newState;\r\n\r\n        case REMOVE_SELECTED_MOVIE:\r\n            let newState_selected = [...state];\r\n            newState_selected.splice(newState_selected.indexOf(action.payload), 1);\r\n            return newState_selected;\r\n\r\n        case RESET_SELECTION:\r\n            return [];\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { LIFES, RESET_SELECTION } from '../actions';\r\nimport movies from '../heros';\r\n\r\nexport default function(state = 6, action){\r\n    switch(action.type){\r\n\r\n        case LIFES:\r\n            if(Object.values(movies).indexOf(action.payload.movie) !== action.payload.index){\r\n                return state - 1;\r\n            }else{\r\n                return state;\r\n            }\r\n        \r\n        case RESET_SELECTION:\r\n            return 6;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducers from './reducers';\nimport promise from 'redux-promise';\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(<Provider store={createStoreWithMiddleware(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({trace: true}))}>\n    <App/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}