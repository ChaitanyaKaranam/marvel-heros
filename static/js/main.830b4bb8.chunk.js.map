{"version":3,"sources":["logo.svg","heros.js","actions/index.js","App.js","serviceWorker.js","reducers/index.js","reducers/reducer_shuffledMovies.js","reducers/reducer_selectedMovie.js","index.js"],"names":["module","exports","__webpack_require__","p","movies","0","title","img","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","SHUFFLE_MOVIES","ORDERED_MOVIES","SELECTED_MOVIES","REMOVE_SHUFFLED_MOVIE","REMOVE_SELECTED_MOVIE","ADD_MOVIE","shuffleMovies","arr","type","payload","selectedMovies","removeShuffledMovie","removeSelectedMovie","addMovie","App","this","shuffle","Object","keys","heros","console","log","props","i","length","j","Math","floor","random","_ref","_this","ShuffledMovies","react_default","a","createElement","className","map","hero","key","src","height","onClick","_this2","SelectedMovies","renderShuffled","renderSelectedMovies","Component","connect","_ref2","actions","Boolean","window","location","hostname","match","combineReducers","state","arguments","undefined","action","newState_shuffled","toConsumableArray","splice","indexOf","concat","newState_selected","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","es","store","reducers","__REDUX_DEVTOOLS_EXTENSION__","trace","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.830b4bb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let movies = {\r\n    0: {\r\n        title: 'Iron Man',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/2/20/Ironmanposter.jpg/revision/latest/scale-to-width-down/338?cb=20080502172105'\r\n    },\r\n    1: {\r\n        title: 'The Incredible Hulk',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/7/78/The_Incredible_Hulk_%28film%29.jpg/revision/latest/scale-to-width-down/338?cb=20080529212502'\r\n    },\r\n    2: {\r\n        title: 'Iron Man 2',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/e/ed/Iron_Man_2_poster.jpg/revision/latest/scale-to-width-down/339?cb=20190309193419'\r\n    },\r\n    3: {\r\n        title: 'Thor',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/9/9c/Thor_Theatrical_Poster.jpg/revision/latest/scale-to-width-down/338?cb=20120605120807'\r\n    },\r\n    4: {\r\n        title: 'Captain America: The First Avenger',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/3/37/Captain_America_The_First_Avenger_poster.jpg/revision/latest?cb=20110725134313'\r\n    },\r\n    5: {\r\n        title: 'The Avengers',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/1/1a/The_Avengers_%28film%29_poster_011.jpg/revision/latest/scale-to-width-down/338?cb=20120229020811'\r\n    },\r\n    6: {\r\n        title: 'Iron Man 3',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/e/e9/Iron_Man_3_%28film%29_poster_006.jpg/revision/latest/scale-to-width-down/337?cb=20130228172348'\r\n    },\r\n    7: {\r\n        title: 'Thor: The Dark World',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/e/e5/Thor_The_Dark_World_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20130801204202'\r\n    },\r\n    8: {\r\n        title: 'Captain America: The Winter Soldier',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/0/03/Captain_America_The_Winter_Soldier_poster_005.jpg/revision/latest/scale-to-width-down/337?cb=20140131142746'\r\n    },\r\n    9: {\r\n        title: 'Guardians of the Galaxy',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/b/b9/Guardians_of_the_Galaxy_%28film%29_poster_001.jpg/revision/latest/scale-to-width-down/337?cb=20140516161438'\r\n    },\r\n    10: {\r\n        title: 'Avengers: Age of Ultron',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/e/ee/Avengers_Age_of_Ultron_poster_001.jpg/revision/latest/scale-to-width-down/337?cb=20150224171724'\r\n    },\r\n    11: {\r\n        title: 'Ant-Man',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/d/d6/Ant-Man_%28film%29_poster_001.jpeg/revision/latest/scale-to-width-down/337?cb=20150506151531'\r\n    },\r\n    12: {\r\n        title: 'Captain America: Civil War',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/5/5c/Civil_War_Final_Poster.jpg/revision/latest/scale-to-width-down/337?cb=20160310174551'\r\n    },\r\n    13: {\r\n        title: 'Doctor Strange',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/2/23/Doctor_Strange_%28film%29_poster_003.jpg/revision/latest/scale-to-width-down/337?cb=20160724013508'\r\n    },\r\n    14: {\r\n        title: 'Guardians of the Galaxy Vol. 2',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/9/94/Guardians_of_the_Galaxy_Vol._2_%28film%29_poster_004.jpg/revision/latest/scale-to-width-down/337?cb=20170301052056'\r\n    },\r\n    15: {\r\n        title: 'Spider-Man: Homecoming',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/4/4f/Spider-Man_Homecoming_poster_004.jpg/revision/latest/scale-to-width-down/337?cb=20170524085936'\r\n    },\r\n    16: {\r\n        title: 'Thor: Ragnarok',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/3/30/Thor_Ragnarok_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20170723014825'\r\n    },\r\n    17: {\r\n        title: 'Black Panther',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/9/94/Black_Panther_%28film%29_poster_003.jpg/revision/latest/scale-to-width-down/337?cb=20171016144930'\r\n    },\r\n    18: {\r\n        title: 'Avengers: Infinity War',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/8/8b/Avengers_Infinity_War_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20180318160428'\r\n    },\r\n    19: {\r\n        title: 'Ant-Man and the Wasp',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/3/38/Ant-Man_and_the_Wasp_%28film%29_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20180430180151'\r\n    },\r\n    20: {\r\n        title: 'Captain Marvel',\r\n        img: 'https://vignette.wikia.nocookie.net/marveldatabase/images/3/33/Captain_Marvel_%28film%29_poster_002.jpg/revision/latest/scale-to-width-down/337?cb=20181203081354'\r\n    }\r\n}\r\n\r\nexport default movies;","export const SHUFFLE_MOVIES = 'SHUFFLE_MOVIES';\r\nexport const ORDERED_MOVIES = 'ORDERED_MOVIES';\r\nexport const SELECTED_MOVIES = 'SELECTED_MOVIES';\r\nexport const REMOVE_SHUFFLED_MOVIE = 'REMOVE_SHUFFLED_MOVIE';\r\nexport const REMOVE_SELECTED_MOVIE = 'REMOVE_SELECTED_MOVIE';\r\nexport const ADD_MOVIE = 'ADD_MOVIE';\r\n\r\nexport const shuffleMovies = (arr) => {\r\n    return {\r\n        type: SHUFFLE_MOVIES,\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const selectedMovies = (payload) => {\r\n    return {\r\n        type: SELECTED_MOVIES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const removeShuffledMovie = (payload) => {\r\n    return{\r\n        type: REMOVE_SHUFFLED_MOVIE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const removeSelectedMovie = (payload) => {\r\n    return{\r\n        type: REMOVE_SELECTED_MOVIE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const addMovie = (payload) => {\r\n    return{\r\n        type: ADD_MOVIE,\r\n        payload\r\n    }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport heros from './heros';\nimport * as actions from './actions';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n\n  componentDidMount(){\n    \n    let arr = this.shuffle(Object.keys(heros));\n\n    console.log(arr);\n      \n    this.props.shuffleMovies(arr);\n\n  }\n\n  shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n\n  renderShuffled(){\n\n    let arr = this.props.ShuffledMovies;\n\n    if(arr.length < 1){\n      return(\n        <h6 className=\"center white-text\">No Movies in this list</h6>\n      )\n    }\n\n    return arr.map(hero => {\n      return(       \n          <div className=\"col s4\" key={hero}>\n            <img src={heros[hero]['img']} height={300} onClick={() => {\n              this.props.selectedMovies(hero);\n              this.props.removeShuffledMovie(hero);\n            }}/>\n          </div>        \n      )\n    })\n  }\n\n  renderSelectedMovies(){\n    if(this.props.SelectedMovies){\n      \n      let arr = this.props.SelectedMovies;\n\n      if(arr.length < 1){\n        return(\n          <h6 className=\"center white-text\">No Movies in this list</h6>\n        )\n      }\n\n      return arr.map(hero => {\n        return(       \n            <div className=\"col s4\" key={hero}>\n              <img src={heros[hero]['img']} height={300} onClick={() => {\n                this.props.removeSelectedMovie(hero);\n                this.props.addMovie(hero);\n              }}/>\n            </div>        \n        )\n      })\n    }\n  }\n\n  render() {\n    if(this.props.ShuffledMovies){\n      return (\n        <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"shuffle col s12 m12 l6 container\">\n          <div className=\"row\">\n            <h3 className=\"center white-text\">Shuffled Movies</h3>\n            <br/>\n            <br/>\n            {this.renderShuffled()}\n            </div>\n          </div>\n          <div className=\"ordered col s12 m12 l6 container\">\n            <div className=\"row\">\n            <h3 className=\"center white-text\">Selected Movies</h3>\n            <br/>\n            <br/>\n            {this.renderSelectedMovies()}\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n    }else{\n      return(\n        <div>Loading...</div>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps({ ShuffledMovies, SelectedMovies }){\n  return{\n    ShuffledMovies, SelectedMovies\n  }\n}\n\nexport default connect(mapStateToProps,actions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport ShuffledMovies from './reducer_shuffledMovies';\r\nimport SelectedMovies from './reducer_selectedMovie';\r\n\r\nexport default combineReducers({\r\n    ShuffledMovies,\r\n    SelectedMovies\r\n})","import { SHUFFLE_MOVIES, REMOVE_SHUFFLED_MOVIE, ADD_MOVIE } from '../actions';\r\n\r\nexport default function(state = null, action){\r\n    switch(action.type){\r\n\r\n        case SHUFFLE_MOVIES:\r\n            let arr = action.payload;\r\n            return arr;\r\n\r\n        case REMOVE_SHUFFLED_MOVIE:\r\n            let newState_shuffled = [...state];\r\n            newState_shuffled.splice(newState_shuffled.indexOf(action.payload), 1);\r\n            return newState_shuffled;\r\n\r\n        case ADD_MOVIE:\r\n            let newState_add = [...state, action.payload];\r\n            return newState_add;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { SELECTED_MOVIES, REMOVE_SELECTED_MOVIE } from '../actions';\r\n\r\nexport default function(state = [], action){\r\n    switch(action.type){\r\n\r\n        case SELECTED_MOVIES:\r\n            let newState = [...state, action.payload]\r\n            return newState;\r\n\r\n        case REMOVE_SELECTED_MOVIE:\r\n            let newState_selected = [...state];\r\n            newState_selected.splice(newState_selected.indexOf(action.payload), 1);\r\n            return newState_selected;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducers from './reducers';\nimport promise from 'redux-promise';\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(<Provider store={createStoreWithMiddleware(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({trace: true}))}>\n    <App/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}